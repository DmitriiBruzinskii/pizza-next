generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url = env("POSTGRES_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model User {
  id Int @id @default(autoincrement())

  fullName String
  email String @unique
  password String
  role UserRole @default(USER)

  provider String?
  providerId String?

  cart Cart?
  orders Order[]  
  verificationCode VerificationCode?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt 
}

model Catagory {
  id Int @id @default(autoincrement())

  name String @unique
  products Product[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Product {
  id Int @id @default(autoincrement())

  name String
  imageUrl String

  ingredients Ingredients[]
  items ProductVariation[]

  catagory Catagory @relation(fields: [catagoryId], references: [id])
  catagoryId Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ProductVariation {
  id Int @id @default(autoincrement())

  price Int
  size Int?
  pizzaType Int?

  product Product @relation(fields: [productId], references: [id])
  productId Int

  cartItems CartItem[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Ingredients {
  id Int @id @default(autoincrement())

  name String 
  price Int
  imageUrl String

  products Product[]

  cartItems CartItem[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Cart {
  id Int @id @default(autoincrement())

  user User? @relation(fields: [userId], references: [id])
  userId Int @unique

  items CartItem[]

  token String

  totalAmount Int @default(0)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model CartItem {
  id Int @id @default(autoincrement())

  cart Cart @relation(fields: [cartId], references: [id])
  cartId Int

  productVariation ProductVariation @relation(fields: [productId], references: [id])
  productId Int

  quantity Int @default(1)

  ingredients Ingredients[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Order {
  id Int @id @default(autoincrement())

  user User? @relation(fields: [userId], references: [id])
  userId Int?
  
  token String

  totalAmount Int
  status OrderStatus
  paymentId String?

  items Json

  email String
  fullName String
  address String
  phone String
  comment String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum OrderStatus {
  PENDING
  SUCCEEDED
  CANCELLED
}

model VerificationCode {
  id Int @id @default(autoincrement())

  code String @unique
  user User @relation(fields: [userId], references: [id])
  userId Int @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum UserRole {
  USER
  ADMIN
}